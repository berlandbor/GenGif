const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');
const frames = [];
const framePreview = document.getElementById('frames-list');
const outputGif = document.getElementById('output-gif');
const colorPicker = document.getElementById('colorPicker');
const brushSize = document.getElementById('brushSize');
const frameDelay = document.getElementById('frameDelay');
const textOverlay = document.getElementById('textOverlay');

let gifBlob = null;
let maxCanvasWidth = 0;
let maxCanvasHeight = 0;

// üìå –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ canvas –ø–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
function resizeCanvas(width, height) {
    canvas.width = width;
    canvas.height = height;
    ctx.fillStyle = "white"; // –§–æ–Ω –±–µ–ª—ã–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å)
    ctx.fillRect(0, 0, width, height);
}

// üìå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ä–∞–∑–º–µ—Ä–æ–≤ –≤—Å–µ—Ö –∫–∞–¥—Ä–æ–≤)
document.getElementById('upload').addEventListener('change', function (event) {
    const file = event.target.files[0];
    if (!file) {
        alert('–û—à–∏–±–∫–∞: –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω!');
        return;
    }

    const reader = new FileReader();
    reader.onload = function (e) {
        const img = new Image();
        img.onload = function () {
            // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
            maxCanvasWidth = Math.max(maxCanvasWidth, img.width);
            maxCanvasHeight = Math.max(maxCanvasHeight, img.height);

            // –ú–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä canvas –ø–æ–¥ –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            resizeCanvas(maxCanvasWidth, maxCanvasHeight);
            ctx.drawImage(img, (maxCanvasWidth - img.width) / 2, (maxCanvasHeight - img.height) / 2, img.width, img.height);
        };
        img.src = e.target.result;
    };
    reader.readAsDataURL(file);
});

// üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–¥—Ä–∞ —Å —Ç–µ–∫—Å—Ç–æ–º (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ—á–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞)
function addFrame() {
    const text = textOverlay.value.trim();

    // –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π canvas —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º
    const tempCanvas = document.createElement('canvas');
    tempCanvas.width = maxCanvasWidth;
    tempCanvas.height = maxCanvasHeight;
    const tempCtx = tempCanvas.getContext('2d');

    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ–Ω –±–µ–ª—ã–º
    tempCtx.fillStyle = "white";
    tempCtx.fillRect(0, 0, tempCanvas.width, tempCanvas.height);

    // –†–∏—Å—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Ü–µ–Ω—Ç—Ä—É
    tempCtx.drawImage(canvas, 0, 0, canvas.width, canvas.height);

    if (text) {
        tempCtx.font = "20px Arial";
        tempCtx.fillStyle = "white";
        tempCtx.strokeStyle = "black";
        tempCtx.lineWidth = 3;
        tempCtx.textAlign = "center";
        tempCtx.textBaseline = "bottom";
        tempCtx.strokeText(text, tempCanvas.width / 2, tempCanvas.height - 10);
        tempCtx.fillText(text, tempCanvas.width / 2, tempCanvas.height - 10);
    }

    frames.push(tempCanvas);

    // –ü—Ä–µ–≤—å—é –∫–∞–¥—Ä–∞
    const img = document.createElement('img');
    img.src = tempCanvas.toDataURL("image/gif");
    framePreview.appendChild(img);
}

// üìå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è GIF —Å —Ç–æ—á–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏ (–ø–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É –∫–∞–¥—Ä—É)
function generateGIF() {
    if (frames.length === 0) {
        alert('–û—à–∏–±–∫–∞: –î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–∞–¥—Ä!');
        return;
    }

    const gif = new GIF({
        workers: 2,
        quality: 10,
        width: maxCanvasWidth, // –¢–µ–ø–µ—Ä—å GIF —Å–æ–∑–¥–∞—ë—Ç—Å—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º –≤—Å–µ—Ö –∫–∞–¥—Ä–æ–≤
        height: maxCanvasHeight
    });

    frames.forEach(frame => {
        gif.addFrame(frame, { delay: Number(frameDelay.value) });
    });

    gif.on('finished', function (blob) {
        gifBlob = blob;
        outputGif.src = URL.createObjectURL(blob);
    });

    gif.render();
}

// üìå –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞–¥—Ä–æ–≤ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º GIF
let previewIndex = 0;
let previewInterval;

function previewAnimation() {
    if (frames.length === 0) {
        alert("–û—à–∏–±–∫–∞: –ù–µ—Ç –∫–∞–¥—Ä–æ–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞!");
        return;
    }

    previewIndex = 0;
    clearInterval(previewInterval);

    previewInterval = setInterval(() => {
        outputGif.src = frames[previewIndex].toDataURL("image/gif");
        previewIndex = (previewIndex + 1) % frames.length;
    }, Number(frameDelay.value));
}

// üìå –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–¥—Ä–æ–≤
function stopPreview() {
    clearInterval(previewInterval);
}

// üìå –û—á–∏—Å—Ç–∫–∞ –∫–∞–¥—Ä–æ–≤
function clearFrames() {
    frames.length = 0;
    framePreview.innerHTML = '';
    maxCanvasWidth = 0;
    maxCanvasHeight = 0;
    resizeCanvas(300, 300); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –Ω–∞ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π
    outputGif.src = "";
    gifBlob = null;
}

// üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ GIF (–±–µ–∑ –æ—à–∏–±–æ–∫)
function downloadGIF() {
    if (!gifBlob) {
        alert('–û—à–∏–±–∫–∞: –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ GIF!');
        return;
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
    const timestamp = new Date().toISOString().replace(/[:.]/g, "-");
    const fileName = `animation_${timestamp}.gif`;

    const link = document.createElement('a');
    link.href = URL.createObjectURL(gifBlob);
    link.download = fileName;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}